{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/andres/Documents/Proyectos/questions3/app/root.tsx", "/Users/andres/Documents/Proyectos/questions3/app/routes/ejemplo.tsx", "../app/utils/db.server.ts", "/Users/andres/Documents/Proyectos/questions3/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from \"./styles/app.css\"\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }]\n}\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Star } from \"@prisma/client\";\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\n\n\nexport const loader: LoaderFunction = async () => {\n    const data = await db.star.findMany();\n    return json(data);\n}\n\nexport default function Index() {\n\n    const data = useLoaderData<Star[]>();\n\n    return (\n      <div>\n        <h2>Ejemplo</h2>\n        <ul>\n            {data.map((start, index) => <li key={index}>{start.name}</li>)}\n        </ul>\n      </div>\n    );\n  }\n  ", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n  }\n  db = global.__db;\n}\n\nexport { db };", "import { Link } from \"@remix-run/react\";\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1 className=\"text-3xl font-bold underline\">\n      Hello world!\n    </h1>\n\n    <p className=\"text-red-900 bg-slate-700\">Parrafo</p>\n      \n      <Link to=\"ejemplo\">\n        Ir a Ejemplo\n      </Link>\n    </div>\n  );\n}\n", "export default {'version':'f41f32cc','entry':{'module':'/build/entry.client-BP6MYQ7D.js','imports':['/build/_shared/chunk-AQ5TLZ7M.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-USARWPA4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ejemplo':{'id':'routes/ejemplo','parentId':'root','path':'ejemplo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ejemplo-DEYDA4K7.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-OG4IZFKO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F41F32CC.js'};", "\nimport * as entryServer from \"/Users/andres/Documents/Proyectos/questions3/app/entry.server.tsx\";\nimport * as route0 from \"/Users/andres/Documents/Proyectos/questions3/app/root.tsx\";\nimport * as route1 from \"/Users/andres/Documents/Proyectos/questions3/app/routes/ejemplo.tsx\";\nimport * as route2 from \"/Users/andres/Documents/Proyectos/questions3/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/ejemplo\": {\n      id: \"routes/ejemplo\",\n      parentId: \"root\",\n      path: \"ejemplo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
